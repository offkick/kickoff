jwt:
  secret-key: 56ab0682dda585b2997d3871c0921fb6929ef195501ab98b18c6870bdc808970fb041463f6792ae02a4c7458bc3e375095a03508f3bb2925eddf618a56d41540
spring:
  session:
    store-type: redis
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: 204538173899-dmsvi4gb0oag586hvm6morsqirk73d1q.apps.googleusercontent.com
            client-secret: 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
            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
            scope:
              - email

server:
  forward-headers-strategy: framework
---
spring:
  config:
    activate:
      on-profile: local
  datasource:
    url: jdbc:mysql://ec2-3-36-78-202.ap-northeast-2.compute.amazonaws.com:3306/kick_off?createDatabaseIfNotExist=true


#    url: jdbc:mysql://localhost:3306/kick_off?createDatabaseIfNotExist=true
    driver-class-name: com.mysql.cj.jdbc.Driver
#    username: root
#    password: Abcd123@
    username: master
    password: master1234
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        format_sql: true
    defer-datasource-initialization: true
logging:
  level:
    root: info
---
spring:
  config:
    activate:
      on-profile: prod
  datasource:
    url: jdbc:mysql://ec2-3-36-78-202.ap-northeast-2.compute.amazonaws.com:3306/kick_off?createDatabaseIfNotExist=true
    driver-class-name: com.mysql.cj.jdbc.Driver
    username: master
    password: master1234
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        format_sql: true
    defer-datasource-initialization: true
logging:
  level:
    root: info
